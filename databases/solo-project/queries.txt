SOLO CHALLENGE 8.3 

1. Display the information in one table (either table is fine).

COMMAND:
sqlite> SELECT * FROM songs;

OUTPUT:
1|2|Migos|Bad and Boujee|2|true
2|6|Big Sean|Bounce Back|2|true
3|15|Bruno Mars|24K Magic|1|true
4|19|Shawn Mendes|Mercy|1|false


2. Update an item that meets some condition (you can choose a condition that makes sense).

COMMAND:
sqlite> UPDATE songs SET position=1 WHERE track="Bad and Boujee";

OUTPUT: 
(Nothing was output.)

3. Display the information in both tables using one query.

COMMAND:
sqlite> SELECT songs.position, songs.artist, songs.track, genres.genre, songs.i_like FROM songs JOIN genres ON songs.genre_id = genres.id;

OUTPUT:
1|Migos|Bad and Boujee|Hip Hop|true
6|Big Sean|Bounce Back|Hip Hop|true
15|Bruno Mars|24K Magic|Pop|true
19|Shawn Mendes|Mercy|Pop|false



4. Display a narrower selection of columns (fewer columns than all of them, in other words) from both tables using one query.

COMMAND:
sqlite> SELECT songs.artist, genres.genre FROM songs JOIN genres on songs.genre_id = genres.id;

OUTPUT:
Migos|Hip Hop
Big Sean|Hip Hop
Bruno Mars|Pop
Shawn Mendes|Pop



5. Delete an item that meets some condition (you can choose a condition that makes sense).

COMMAND:
sqlite> DELETE FROM songs WHERE artist="Big Sean";

OUTPUT: 
(Nothing was output.)
